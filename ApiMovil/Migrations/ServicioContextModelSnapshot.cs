// <auto-generated />
using System;
using AppMovil.Models.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApiMovil.Migrations
{
    [DbContext(typeof(ServicioContext))]
    partial class ServicioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AppMovil.Models.Entidades.Consulta", b =>
                {
                    b.Property<int>("ConsultaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaConsulta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServicioId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ConsultaId");

                    b.HasIndex("ServicioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Consulta");
                });

            modelBuilder.Entity("AppMovil.Models.Entidades.OTPDato", b =>
                {
                    b.Property<int>("OtpDatoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OtpDatoId");

                    b.ToTable("OTPDato");
                });

            modelBuilder.Entity("AppMovil.Models.Entidades.Pago", b =>
                {
                    b.Property<int>("PagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ConsultaId")
                        .HasColumnType("int");

                    b.Property<string>("Documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mensaje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServicioId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<double>("ValorPagado")
                        .HasColumnType("float");

                    b.HasKey("PagoId");

                    b.HasIndex("ConsultaId");

                    b.HasIndex("ServicioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pago");
                });

            modelBuilder.Entity("AppMovil.Models.Entidades.Parametrizacion", b =>
                {
                    b.Property<int>("ParametrizacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Comision")
                        .HasColumnType("float");

                    b.Property<string>("ContraseniaCorreo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxIntentosLogin")
                        .HasColumnType("int");

                    b.Property<string>("MensajeNuevaCuenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MensajePagoServicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MensajeRecuperacionContrasenia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PuertoCorreo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmtpCorreo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParametrizacionId");

                    b.ToTable("Parametrizacion");
                });

            modelBuilder.Entity("AppMovil.Models.Entidades.Servicio", b =>
                {
                    b.Property<int>("ServicioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ComisionRubro")
                        .HasColumnType("bit");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("bit");

                    b.Property<int>("LongitudReferencia")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServicioHttp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoPagoId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoReferenciaId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoServicioId")
                        .HasColumnType("int");

                    b.HasKey("ServicioId");

                    b.HasIndex("TipoPagoId");

                    b.HasIndex("TipoReferenciaId");

                    b.HasIndex("TipoServicioId");

                    b.ToTable("Servicio");
                });

            modelBuilder.Entity("AppMovil.Models.Entidades.TipoPago", b =>
                {
                    b.Property<int>("TipoPagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoPagoId");

                    b.ToTable("TipoPago");
                });

            modelBuilder.Entity("AppMovil.Models.Entidades.TipoReferencia", b =>
                {
                    b.Property<int>("TipoReferenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoReferenciaId");

                    b.ToTable("TipoReferencia");
                });

            modelBuilder.Entity("AppMovil.Models.Entidades.TipoServicio", b =>
                {
                    b.Property<int>("TipoServicioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoServicioId");

                    b.ToTable("TipoServicio");
                });

            modelBuilder.Entity("AppMovil.Models.Entidades.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Bloqueado")
                        .HasColumnType("bit");

                    b.Property<string>("Contrasenia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("AppMovil.Models.Entidades.Consulta", b =>
                {
                    b.HasOne("AppMovil.Models.Entidades.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId");

                    b.HasOne("AppMovil.Models.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("AppMovil.Models.Entidades.Pago", b =>
                {
                    b.HasOne("AppMovil.Models.Entidades.Consulta", "Consulta")
                        .WithMany()
                        .HasForeignKey("ConsultaId");

                    b.HasOne("AppMovil.Models.Entidades.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId");

                    b.HasOne("AppMovil.Models.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("AppMovil.Models.Entidades.Servicio", b =>
                {
                    b.HasOne("AppMovil.Models.Entidades.TipoPago", "TipoPago")
                        .WithMany()
                        .HasForeignKey("TipoPagoId");

                    b.HasOne("AppMovil.Models.Entidades.TipoReferencia", "TipoReferencia")
                        .WithMany()
                        .HasForeignKey("TipoReferenciaId");

                    b.HasOne("AppMovil.Models.Entidades.TipoServicio", "TipoServicio")
                        .WithMany()
                        .HasForeignKey("TipoServicioId");
                });
#pragma warning restore 612, 618
        }
    }
}
